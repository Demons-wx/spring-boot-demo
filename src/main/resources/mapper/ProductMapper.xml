<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="online.wangxuan.dao.ProductMapper">

    <!-- 开启基于redis的二级缓存 -->
    <cache type="online.wangxuan.redis.RedisCache" />

    <sql id="productSql">
        id, name, price
    </sql>

    <sql id="tableName">
        products
    </sql>

    <select id="get" resultType="Product" useCache="true">
        SELECT <include refid="productSql"/>
        FROM <include refid="tableName"/>
        WHERE id = #{id}
        LIMIT 1
    </select>

    <!-- 设置flushCache为ture，这样在更新product信息时，能够自动失效缓存(本质上是调用clear方法) -->
    <update id="update" parameterType="Product" flushCache="true">
        UPDATE <include refid="tableName"/>
        SET name = #{name}, price = #{price}
        WHERE id = #{id}
        LIMIT 1
    </update>

    <select id="delete">
        DELETE FROM <include refid="tableName"/>
        WHERE id = #{id}
    </select>

</mapper>